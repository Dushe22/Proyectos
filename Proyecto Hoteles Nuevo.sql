CREATE DATABASE ProyectoHotel;
USE ProyectoHotel;

CREATE TABLE Documentos (ID_DOCUMENTOS INT PRIMARY KEY AUTO_INCREMENT, Tipo_Documento ENUM ('DNI','CI','Pasaporte','Licencia de Conducir',
'Tarjeta de Residencia del Hotel','Visa de Trabajo','Otro') NOT NULL DEFAULT 'CI');
CREATE TABLE Nacionalidades (ID_NACIONALIDAD INT PRIMARY KEY AUTO_INCREMENT, NOMBRE_NACIONALIDAD VARCHAR(255) NOT NULL DEFAULT 'URUGUAYA');
CREATE TABLE PrefijosTelefono(ID_PREFIJO_TELEFONO INT PRIMARY KEY AUTO_INCREMENT, PREFIJO ENUM ( '+54',  -- Argentina (+54)
  '+55',  -- Brasil (+55)
  '+598', -- Uruguay (+598)
  '+56',  -- Chile (+56)
  '+595', -- Paraguay (+595)
  '+507', -- Panamá (+507)
  '+52',  -- México (+52)
  '+1',   -- Estados Unidos (+1)
  'Otro') NOT NULL DEFAULT 'Otro');-- Otro prefijo
CREATE TABLE Fidelizacion (ID_FIDELIZACION INT PRIMARY KEY AUTO_INCREMENT, NIVEL_FIDELIZACION ENUM ('Basic','Silver','Gold','Platinum','VIP','Inactive')
NOT NULL DEFAULT 'Basic');
CREATE TABLE Genero (ID_GENERO INT PRIMARY KEY AUTO_INCREMENT, GENERO ENUM ('Masculino','Femenino','No Binario','Genero Diverso','Prefiero No Decirlo','Otro')
NOT NULL DEFAULT 'Prefiero No Decirlo');
CREATE TABLE Tipos_Factura(ID_TIPO_FACTURA INT PRIMARY KEY AUTO_INCREMENT, TIPO_FACTURA ENUM ('Factura Habitacion','Factura Restaurante','Factura Bar',
'Factura Estacionamiento','Factura Imprevistos', 'Factura Adicional') NOT NULL DEFAULT 'Factura Adicional');
CREATE TABLE Medios_Pago(ID_MEDIO_PAGO INT PRIMARY KEY AUTO_INCREMENT, MEDIO_PAGO ENUM('Efectivo','Tarjeta Credito','Tarjeta Debito', 'Saldo del Hotel') 
NOT NULL DEFAULT 'Efectivo');
CREATE TABLE Proveedores_Tarjeta(ID_PROVEEDOR_TARJETA INT PRIMARY KEY AUTO_INCREMENT, PROOVEDOR_TARJETA ENUM (
  'Visa',
  'MasterCard',
  'American Express',
  'Discover',
  'Diners Club',
  'JCB',
  'UnionPay',
  'Maestro',
  'Visa Electron',
  'MasterCard Debit') NOT NULL DEFAULT 'Visa');
CREATE TABLE Tipos_Habitacion(ID_TIPO_HABITACION INT PRIMARY KEY AUTO_INCREMENT, TIPO_HABITACION ENUM('Individual','Doble','Matrimonial','Suite Junior',
'Suite Ejecutiva','Suite Presidencial','Familiar') NOT NULL DEFAULT 'Individual');
CREATE TABLE Puestos_Trabajo(ID_PUESTO_TRABAJO INT PRIMARY KEY AUTO_INCREMENT, NOMBRE_PUESTO_TRABAJO ENUM ('Recepcionista', 'Conserje', 'Camarero', 'Chef', 'Cocinero',
'Ayudante de Cocina','Limpieza','Otro') NOT NULL DEFAULT 'Recepcionista');
  
CREATE TABLE Huespedes (ID_HUESPEDES INT PRIMARY KEY AUTO_INCREMENT, NOMBRE VARCHAR(100) NOT NULL DEFAULT 'Sin Nombre', 
  APELLIDO VARCHAR(100) NOT NULL DEFAULT 'Sin Apellido', ID_DOCUMENTOS INT, NUMERO_DOCUMENTO VARCHAR(50) NOT NULL UNIQUE DEFAULT 'Sin Documento', 
  ID_NACIONALIDAD INT, ID_GENERO INT, ID_PREFIJO_TELEFONO INT, NUMERO_TELEFONO VARCHAR(100), CORREO VARCHAR(100) UNIQUE NOT NULL DEFAULT 'Sin Correo', 
  ID_FIDELIZACION INT, 
  FOREIGN KEY (ID_DOCUMENTOS) REFERENCES Documentos(ID_DOCUMENTOS), 
  FOREIGN KEY (ID_NACIONALIDAD) REFERENCES Nacionalidades(ID_NACIONALIDAD),
  FOREIGN KEY (ID_GENERO) REFERENCES Genero(ID_GENERO),
  FOREIGN KEY (ID_PREFIJO_TELEFONO) REFERENCES PrefijosTelefono(ID_PREFIJO_TELEFONO),
  FOREIGN KEY (ID_FIDELIZACION) REFERENCES Fidelizacion(ID_FIDELIZACION),
  INDEX IDX_NOMBREHUESPED(NOMBRE),
  INDEX IDX_APELLIDOHUESPED(APELLIDO),
  INDEX IDX_DOCUMENTOHUESPED(NUMERO_DOCUMENTO),
  INDEX IDX_CORREOHUESPED(CORREO),
  INDEX IDX_NUMEROHUESPED(NUMERO_TELEFONO));
  
CREATE TABLE Empleados(ID_EMPLEADO INT PRIMARY KEY AUTO_INCREMENT, NOMBRE VARCHAR(100) NOT NULL DEFAULT 'Sin Nombre', 
  APELLIDO VARCHAR(100) NOT NULL DEFAULT 'Sin Apellido', ID_DOCUMENTOS INT, NUMERO_DOCUMENTO VARCHAR(50) NOT NULL UNIQUE DEFAULT 'Sin Documento', 
  ID_NACIONALIDAD INT, ID_GENERO INT, ID_PREFIJO_TELEFONO INT, NUMERO_TELEFONO VARCHAR(100), CORREO VARCHAR(100) UNIQUE NOT NULL DEFAULT 'Sin Correo',
  ID_PUESTO_TRABAJO INT, FECHA_INGRESO TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, SALARIO DECIMAL (12,2) NOT NULL DEFAULT 12000.00, 
  ID_FIDELIZACION INT, 
  FOREIGN KEY (ID_DOCUMENTOS) REFERENCES Documentos(ID_DOCUMENTOS), 
  FOREIGN KEY (ID_NACIONALIDAD) REFERENCES Nacionalidades(ID_NACIONALIDAD),
  FOREIGN KEY (ID_GENERO) REFERENCES Genero(ID_GENERO),
  FOREIGN KEY (ID_PREFIJO_TELEFONO) REFERENCES PrefijosTelefono(ID_PREFIJO_TELEFONO),
  FOREIGN KEY (ID_PUESTO_TRABAJO) REFERENCES Puestos_Trabajo(ID_PUESTO_TRABAJO),
  FOREIGN KEY (ID_FIDELIZACION) REFERENCES Fidelizacion(ID_FIDELIZACION),  
  INDEX IDX_NOMBREEMPLEADO(NOMBRE),
  INDEX IDX_APELLIDOEMPLEADO(APELLIDO),
  INDEX IDX_DOCUMENTOEMPLEADO(NUMERO_DOCUMENTO),
  INDEX IDX_CORREOHUESPED(CORREO),
  INDEX IDX_NUMEROHUESPED(NUMERO_TELEFONO));
  
CREATE TABLE Servicios(ID_SERVICIO INT PRIMARY KEY AUTO_INCREMENT, NOMBRE_SERVICIO ENUM ('WiFi', 'Estacionamiento', 'Desayuno', 'Piscina', 
'Gimnasio', 'Spa', 'Limpieza', 'Servicio a la Habitación', 'Traslado', 'Otro') NOT NULL DEFAULT 'Otro', DESCRIPCION TEXT NOT NULL, 
COSTO DECIMAL (12,2) NOT NULL DEFAULT 1.00 CHECK(COSTO>0.00));

CREATE TABLE Reservas(ID_RESERVA INT PRIMARY KEY AUTO_INCREMENT, ID_HUESPEDES INT, FECHA_ENTRADA TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
FECHA_SALIDA TIMESTAMP NOT NULL DEFAULT (CURRENT_TIMESTAMP + INTERVAL 24 HOUR), ID_TIPO_HABITACION INT, NUMERO_HABITACION TINYINT NOT NULL DEFAULT 1,
TARIFA FLOAT NOT NULL DEFAULT 1.00 CHECK(TARIFA>0.00), ID_TIPO_FACTURA INT, MONTO FLOAT NOT NULL DEFAULT 1.00 CHECK(MONTO>0.00),
FOREIGN KEY (ID_HUESPEDES) REFERENCES Huespedes(ID_HUESPEDES), 
FOREIGN KEY (ID_TIPO_HABITACION) REFERENCES Tipos_Habitacion(ID_TIPO_HABITACION),
FOREIGN KEY (ID_TIPO_FACTURA) REFERENCES Tipos_Factura(ID_TIPO_FACTURA),
INDEX IDX_FECHAENTRADAHUESPED(FECHA_ENTRADA),
INDEX IDX_FECHASALIDAHUESPED(FECHA_SALIDA),
INDEX IDX_SALDOPAGARHUESPED(MONTO));

CREATE TABLE Facturas(ID_FACTURA INT PRIMARY KEY AUTO_INCREMENT, ID_RESERVA INT, ID_TIPO_FACTURA INT, MONTO_TOTAL FLOAT NOT NULL 
DEFAULT 1.00 CHECK(MONTO_TOTAL>0.00), PAGADA BOOLEAN NOT NULL CHECK(PAGADA BETWEEN 0 AND 1), FECHA_EMISION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (ID_RESERVA) REFERENCES Reservas(ID_RESERVA),
FOREIGN KEY (ID_TIPO_FACTURA) REFERENCES Tipos_Factura(ID_TIPO_FACTURA),
INDEX IDX_MONTOFACTURA(MONTO_TOTAL),
INDEX IDX_FECHAEMISIONFACTURA(FECHA_EMISION));

CREATE TABLE Habitaciones(ID_HABITACION INT PRIMARY KEY AUTO_INCREMENT, NUMERO_HABITACION TINYINT UNIQUE NOT NULL, ID_TIPO_HABITACION INT,
CAPACIDAD TINYINT NOT NULL DEFAULT 1, DISPONIBLE BOOLEAN CHECK(DISPONIBLE BETWEEN 0 AND 1),
FOREIGN KEY (ID_TIPO_HABITACION) REFERENCES Tipos_Habitacion(ID_TIPO_HABITACION),
INDEX IDX_NUMEROHABITACION(NUMERO_HABITACION),
INDEX IDX_CAPACIDADHABITACION(CAPACIDAD));

CREATE TABLE Check_Ins(ID_CHECKIN INT PRIMARY KEY AUTO_INCREMENT, ID_RESERVA INT, CUANDO_CHECKIN TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ID_EMPLEADO INT,
FOREIGN KEY (ID_RESERVA) REFERENCES Reservas(ID_RESERVA),
FOREIGN KEY (ID_EMPLEADO) REFERENCES Empleados(ID_EMPLEADO),
INDEX IDX_CUANDOCHECKIN(CUANDO_CHECKIN));
CREATE TABLE Check_Outs(ID_CHECKIN INT PRIMARY KEY AUTO_INCREMENT, ID_RESERVA INT, CUANDO_CHECKOUT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ID_EMPLEADO INT,
FOREIGN KEY (ID_RESERVA) REFERENCES Reservas(ID_RESERVA),
FOREIGN KEY (ID_EMPLEADO) REFERENCES Empleados(ID_EMPLEADO),
INDEX IDX_CUANDOCHECKOUT(CUANDO_CHECKOUT));

CREATE TABLE Calificaciones(ID_CALIFICACION INT PRIMARY KEY AUTO_INCREMENT, ID_RESERVA INT, COMENTARIO VARCHAR(255) NOT NULL, 
CALIFICACION ENUM ('1','2','3','4','5'),
FOREIGN KEY (ID_RESERVA) REFERENCES Reservas(ID_RESERVA),
INDEX IDX_CALIFICACIONRESERVA(CALIFICACION),
INDEX IDX_COMENTARIORESERVA(COMENTARIO));

CREATE TABLE Eventos(ID_EVENTO INT PRIMARY KEY AUTO_INCREMENT, NOMBRE_EVENTO VARCHAR(255) NOT NULL DEFAULT 'Sin Nombre',
FECHA_INICIO TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, FECHA_FIN TIMESTAMP NOT NULL DEFAULT (CURRENT_TIMESTAMP + INTERVAL 4 HOUR),
DESCRIPCION_EVENTO VARCHAR(100), ID_RESPONSABLE INT NOT NULL,
FOREIGN KEY (ID_RESPONSABLE) REFERENCES Empleados(ID_EMPLEADO),
INDEX IDX_NOMBREEVENTO(NOMBRE_EVENTO),
INDEX IDX_FECHAINICIOEVENTO(FECHA_INICIO),
INDEX IDX_FECHAFINEVENTO(FECHA_FIN));

CREATE TABLE Servicios_Adicionales(ID_SERVICIO_ADICIONAL INT PRIMARY KEY AUTO_INCREMENT, NOMBRE_SERVICIO_ADICIONAL VARCHAR(255) NOT NULL DEFAULT 'Sin 
Nombre', DESCRIPCION_SERVICIO_ADICIONAL VARCHAR(255) NOT NULL DEFAULT 'Sin Descripcion', COSTO_SERVICIO_ADICIONAL FLOAT NOT NULL 
DEFAULT 1.00 CHECK(COSTO_SERVICIO_ADICIONAL>0.00),
INDEX IDX_NOMBRESERVICIOADICIONAL(NOMBRE_SERVICIO_ADICIONAL),
INDEX IDX_DESCRIPCIONSERVICIOADICIONAL(DESCRIPCION_SERVICIO_ADICIONAL),
INDEX IDX_COSTOSERVICIOADICIONAL(COSTO_SERVICIO_ADICIONAL));

CREATE TABLE Promociones(ID_PROMOCION INT PRIMARY KEY AUTO_INCREMENT, NOMBRE_PROMOCION VARCHAR(255) NOT NULL DEFAULT 'Sin Nombre',
DESCRIPCION VARCHAR(255) NOT NULL DEFAULT 'Sin Descripcion', FECHA_INICIO_PROMOCION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
FECHA_FINAL_PROMOCION TIMESTAMP NOT NULL DEFAULT (CURRENT_TIMESTAMP + INTERVAL 1 MONTH),
INDEX IDX_NOMBREPROMOCION(NOMBRE_PROMOCION),
INDEX IDX_DESCRIPCIONPROMOCION(DESCRIPCION),
INDEX IDX_FECHAINICIOPROMOCION(FECHA_INICIO_PROMOCION),
INDEX IDX_FECHAFINALPROMOCION(FECHA_FINAL_PROMOCION));

CREATE TABLE Historial_Precios_Habitaciones(ID_HISTORIAL_PRECIO INT PRIMARY KEY AUTO_INCREMENT, ID_HABITACION INT, 
FECHA_INICIO TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, FECHA_FIN TIMESTAMP NOT NULL DEFAULT (CURRENT_TIMESTAMP + INTERVAL 24 HOUR),
PRECIO FLOAT NOT NULL DEFAULT 1.00 CHECK(PRECIO>0.00),
FOREIGN KEY (ID_HABITACION) REFERENCES Habitaciones(ID_HABITACION),
INDEX IDX_FECHAINICIO(FECHA_INICIO),
INDEX IDX_FECHAFIN(FECHA_FIN),
INDEX IDX_PRECIOHISTORICOHABITACION(PRECIO));

-- Inserts para la tabla Documentos
INSERT INTO Documentos (Tipo_Documento) VALUES ('DNI'), ('CI'), ('Pasaporte'), ('Licencia de Conducir'), ('Tarjeta de Residencia del Hotel'), ('Visa de Trabajo'), ('Otro');

-- Inserts para la tabla Nacionalidades
INSERT INTO Nacionalidades (NOMBRE_NACIONALIDAD) VALUES ('URUGUAYA'), ('ARGENTINA'), ('BRASILEÑA');

-- Inserts para la tabla PrefijosTelefono
INSERT INTO PrefijosTelefono (PREFIJO) VALUES ('+54'), ('+55'), ('+598'), ('+56'), ('+595'), ('+507'), ('+52'), ('+1'), ('Otro');

-- Inserts para la tabla Fidelizacion
INSERT INTO Fidelizacion (NIVEL_FIDELIZACION) VALUES ('Basic'), ('Silver'), ('Gold'), ('Platinum'), ('VIP'), ('Inactive');

-- Inserts para la tabla Genero
INSERT INTO Genero (GENERO) VALUES ('Masculino'), ('Femenino'), ('No Binario'), ('Genero Diverso'), ('Prefiero No Decirlo'), ('Otro');

-- Inserts para la tabla Tipos_Factura
INSERT INTO Tipos_Factura (TIPO_FACTURA) VALUES ('Factura Habitacion'), ('Factura Restaurante'), ('Factura Bar'), ('Factura Estacionamiento'), ('Factura Imprevistos'), ('Factura Adicional');

-- Inserts para la tabla Medios_Pago
INSERT INTO Medios_Pago (MEDIO_PAGO) VALUES ('Efectivo'), ('Tarjeta Credito'), ('Tarjeta Debito'), ('Saldo del Hotel');

-- Inserts para la tabla Proveedores_Tarjeta
INSERT INTO Proveedores_Tarjeta (PROOVEDOR_TARJETA) VALUES ('Visa'), ('MasterCard'), ('American Express'), ('Discover'), ('Diners Club'), ('JCB'), ('UnionPay'), ('Maestro'), ('Visa Electron'), ('MasterCard Debit');

-- Inserts para la tabla Tipos_Habitacion
INSERT INTO Tipos_Habitacion (TIPO_HABITACION) VALUES ('Individual'), ('Doble'), ('Matrimonial'), ('Suite Junior'), ('Suite Ejecutiva'), ('Suite Presidencial'), ('Familiar');

-- Inserts para la tabla Puestos_Trabajo
INSERT INTO Puestos_Trabajo (NOMBRE_PUESTO_TRABAJO) VALUES ('Recepcionista'), ('Conserje'), ('Camarero'), ('Chef'), ('Cocinero'), ('Ayudante de Cocina'), ('Limpieza'), ('Otro');

-- Inserts para la tabla Huespedes (Los valores para ID_DOCUMENTOS, ID_NACIONALIDAD, ID_GENERO, ID_PREFIJO_TELEFONO e ID_FIDELIZACION deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Huespedes (NOMBRE, APELLIDO, ID_DOCUMENTOS, NUMERO_DOCUMENTO, ID_NACIONALIDAD, ID_GENERO, ID_PREFIJO_TELEFONO, NUMERO_TELEFONO, CORREO, ID_FIDELIZACION) VALUES ('NombreHuesped', 'ApellidoHuesped', 1, 'NumeroDocumento', 1, 1, 1, 'NumeroTelefono', 'Correo@ejemplo.com', 1);

-- Inserts para la tabla Empleados (Los valores para ID_DOCUMENTOS, ID_NACIONALIDAD, ID_GENERO, ID_PREFIJO_TELEFONO, ID_PUESTO_TRABAJO e ID_FIDELIZACION deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Empleados (NOMBRE, APELLIDO, ID_DOCUMENTOS, NUMERO_DOCUMENTO, ID_NACIONALIDAD, ID_GENERO, ID_PREFIJO_TELEFONO, NUMERO_TELEFONO, CORREO, ID_PUESTO_TRABAJO, SALARIO, ID_FIDELIZACION) VALUES ('NombreEmpleado', 'ApellidoEmpleado', 1, 'NumeroDocumento', 1, 1, 1, 'NumeroTelefono', 'Correo@ejemplo.com', 1, 12000.00, 1);

-- Inserts para la tabla Servicios (Los valores para ID_SERVICIO deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Servicios (NOMBRE_SERVICIO, DESCRIPCION, COSTO) VALUES ('WiFi', 'DescripcionWiFi', 5.00), ('Estacionamiento', 'DescripcionEstacionamiento', 10.00);

-- Inserts para la tabla Reservas (Los valores para ID_HUESPEDES, ID_TIPO_HABITACION e ID_TIPO_FACTURA deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Reservas (ID_HUESPEDES, FECHA_ENTRADA, FECHA_SALIDA, ID_TIPO_HABITACION, NUMERO_HABITACION, TARIFA, ID_TIPO_FACTURA, MONTO) VALUES (1, '2023-09-30 12:00:00', '2023-10-07 12:00:00', 1, 1, 100.00, 1, 100.00);

-- Inserts para la tabla Facturas (Los valores para ID_RESERVA e ID_TIPO_FACTURA deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Facturas (ID_RESERVA, ID_TIPO_FACTURA, MONTO_TOTAL, PAGADA, FECHA_EMISION) VALUES (1, 1, 100.00, 1, '2023-09-30 14:00:00');

-- Inserts para la tabla Habitaciones (Los valores para ID_TIPO_HABITACION deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Habitaciones (NUMERO_HABITACION, ID_TIPO_HABITACION, CAPACIDAD, DISPONIBLE) VALUES (1, 1, 2, 1), (2, 2, 2, 1);

-- Inserts para la tabla Check_Ins (Los valores para ID_RESERVA e ID_EMPLEADO deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Check_Ins (ID_RESERVA, CUANDO_CHECKIN, ID_EMPLEADO) VALUES (1, '2023-09-30 12:00:00', 1);

-- Inserts para la tabla Check_Outs (Los valores para ID_RESERVA e ID_EMPLEADO deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Check_Outs (ID_RESERVA, CUANDO_CHECKOUT, ID_EMPLEADO) VALUES (1, '2023-10-07 12:00:00', 1);

-- Inserts para la tabla Calificaciones (Los valores para ID_RESERVA deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Calificaciones (ID_RESERVA, COMENTARIO, CALIFICACION) VALUES (1, 'Buen servicio', '5');

-- Inserts para la tabla Eventos (Los valores para ID_RESPONSABLE deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Eventos (NOMBRE_EVENTO, FECHA_INICIO, FECHA_FIN, DESCRIPCION_EVENTO, ID_RESPONSABLE) VALUES ('Evento1', '2023-10-01 10:00:00', '2023-10-01 14:00:00', 'DescripcionEvento1', 1);

-- Inserts para la tabla Servicios_Adicionales
INSERT INTO Servicios_Adicionales (NOMBRE_SERVICIO_ADICIONAL, DESCRIPCION_SERVICIO_ADICIONAL, COSTO_SERVICIO_ADICIONAL) VALUES ('ServicioAdicional1', 'DescripcionServicioAdicional1', 20.00);

-- Inserts para la tabla Promociones
INSERT INTO Promociones (NOMBRE_PROMOCION, DESCRIPCION, FECHA_INICIO_PROMOCION, FECHA_FINAL_PROMOCION) VALUES ('Promocion1', 'DescripcionPromocion1', '2023-10-01', '2023-10-15');

-- Inserts para la tabla Historial_Precios_Habitaciones (Los valores para ID_HABITACION deben ajustarse según las claves primarias de las tablas correspondientes)
INSERT INTO Historial_Precios_Habitaciones (ID_HABITACION, FECHA_INICIO, FECHA_FIN, PRECIO) VALUES (1, '2023-09-30 12:00:00', '2023-10-01 12:00:00', 80.00);

-- Testing de la BDD
-- Insertar un nuevo huésped
INSERT INTO Huespedes (NOMBRE, APELLIDO, ID_DOCUMENTOS, NUMERO_DOCUMENTO, ID_NACIONALIDAD, ID_GENERO, ID_PREFIJO_TELEFONO, NUMERO_TELEFONO, CORREO, ID_FIDELIZACION)
VALUES ('Nuevo', 'Huesped', 1, '123456789', 1, 1, 1, '987654321', 'nuevo@correo.com', 1);
-- Insertar un nuevo empleado
INSERT INTO Empleados (NOMBRE, APELLIDO, ID_DOCUMENTOS, NUMERO_DOCUMENTO, ID_NACIONALIDAD, ID_GENERO, ID_PREFIJO_TELEFONO, NUMERO_TELEFONO, CORREO, ID_PUESTO_TRABAJO, SALARIO, ID_FIDELIZACION)
VALUES ('Nuevo', 'Empleado', 1, '987654321', 1, 1, 1, '123456789', 'empleado@correo.com', 1, 15000.00, 1);
-- Insertar una nueva reserva
INSERT INTO Reservas (ID_HUESPEDES, FECHA_ENTRADA, FECHA_SALIDA, ID_TIPO_HABITACION, NUMERO_HABITACION, TARIFA, ID_TIPO_FACTURA, MONTO)
VALUES (1, '2023-10-01 12:00:00', '2023-10-07 12:00:00', 1, 1, 120.00, 1, 120.00);
-- Insertar una nueva factura
INSERT INTO Facturas (ID_RESERVA, ID_TIPO_FACTURA, MONTO_TOTAL, PAGADA, FECHA_EMISION)
VALUES (1, 1, 120.00, 1, '2023-10-01 14:00:00');

-- Actualizar el número de teléfono de un huésped
UPDATE Huespedes SET NUMERO_TELEFONO = '111222333' WHERE ID_HUESPEDES = 1;
-- Actualizar el salario de un empleado
UPDATE Empleados SET SALARIO = 16000.00 WHERE ID_EMPLEADO = 1;
-- Actualizar la descripción de un servicio
UPDATE Servicios SET DESCRIPCION = 'Nueva Descripción' WHERE ID_SERVICIO = 1;
-- Actualizar el número de habitación en una reserva
UPDATE Reservas SET NUMERO_HABITACION = 2 WHERE ID_RESERVA = 1;

-- Eliminar un huésped
DELETE FROM Huespedes WHERE ID_HUESPEDES = 1;
-- Eliminar un empleado
DELETE FROM Empleados WHERE ID_EMPLEADO = 1;
-- Eliminar un servicio
DELETE FROM Servicios WHERE ID_SERVICIO = 1;

-- Obtener la lista de huéspedes con reservas
SELECT * FROM Huespedes WHERE ID_HUESPEDES IN (SELECT ID_HUESPEDES FROM Reservas);
-- Obtener la lista de empleados y sus salarios
SELECT NOMBRE, APELLIDO, SALARIO FROM Empleados;
-- Obtener la lista de habitaciones disponibles
SELECT * FROM Habitaciones WHERE DISPONIBLE = 1;
-- Obtener la lista de servicios con sus costos
SELECT NOMBRE_SERVICIO, COSTO FROM Servicios;


-- Consulta compleja: Obtener detalles de la reserva de un huésped específico
SELECT H.NOMBRE, H.APELLIDO, R.FECHA_ENTRADA, R.FECHA_SALIDA, T.TIPO_HABITACION
FROM Huespedes H
JOIN Reservas R ON H.ID_HUESPEDES = R.ID_HUESPEDES
JOIN Tipos_Habitacion T ON R.ID_TIPO_HABITACION = T.ID_TIPO_HABITACION
WHERE H.ID_HUESPEDES = 2;
-- Consulta agregada: Obtener el total de ingresos generados por las reservas
SELECT SUM(MONTO_TOTAL) AS TOTAL_INGRESOS FROM Facturas;

-- Comenzar una transacción
START TRANSACTION;
-- Insertar un nuevo huésped y una nueva reserva (ejemplo de transacción)
SAVEPOINT inicio_transaccion;
INSERT INTO Huespedes (NOMBRE, APELLIDO, ID_DOCUMENTOS, NUMERO_DOCUMENTO, ID_NACIONALIDAD, ID_GENERO, ID_PREFIJO_TELEFONO, NUMERO_TELEFONO, CORREO, ID_FIDELIZACION)
VALUES ('Nuevo', 'Huesped', 1, '123456789', 1, 1, 1, '987654321', 'nuevo@correo.com', 1);
-- Intentar insertar una nueva reserva (esto debería fallar debido a la falta de ID_HUESPEDES)
INSERT INTO Reservas (FECHA_ENTRADA, FECHA_SALIDA, ID_TIPO_HABITACION, NUMERO_HABITACION, TARIFA, ID_TIPO_FACTURA, MONTO)
VALUES ('2023-10-01 12:00:00', '2023-10-07 12:00:00', 1, 1, 120.00, 1, 120.00);
-- Revertir la transacción si hay un error
ROLLBACK TO SAVEPOINT inicio_transaccion;
-- Confirmar la transacción
COMMIT;


